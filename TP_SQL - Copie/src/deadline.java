/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//import static DBconnect.connect;
//import static DBconnectN.connect;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VIP5-SEPT-17
 */
public class deadline extends javax.swing.JFrame {

    String url = "jdbc:sqlserver://localhost:1433;databaseName=bibliodec;user=enidde;password=azert";
    Connection c;
    Statement st;
    PreparedStatement ps;
    ResultSet re;

    public static Connection getConnection() throws SQLException {
        Connection con = null;
        String url = "jdbc:sqlserver://localhost:1433;databaseName=bibliodec;user=enidde;password=azert";
        try {
            con = DriverManager.getConnection(url);
            JOptionPane.showMessageDialog(null, "connsecter avec succes");
            return con;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }
    
//    c = getConnection();
    Statement st0
            ,st1,st2,st3;
    ResultSet rst,rst1,rst2,rst3;
    DefaultTableModel model;
    public deadline() {
        try {
            initComponents();
            c = getConnection();
            model=(DefaultTableModel) empr.getModel();
        } catch (SQLException ex) {
            Logger.getLogger(deadline.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        empr = new javax.swing.JTable();
        Vérif = new javax.swing.JButton();
        accueil = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        empr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NumDoc", "NumAd", "TypeDoc", "Date"
            }
        ));
        empr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emprMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(empr);

        Vérif.setText("Vérif");
        Vérif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VérifActionPerformed(evt);
            }
        });

        accueil.setText("Accueil ");
        accueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accueilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Vérif, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(accueil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(264, 264, 264))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(Vérif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accueil)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emprMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emprMouseClicked
        
    }//GEN-LAST:event_emprMouseClicked

    private void VérifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VérifActionPerformed
        long CONST_DURATION_OF_DAY = 1000 * 60 * 60 * 24;
        try{
            model.getDataVector().removeAllElements();
            int j=0;
            c = getConnection();
            //Connection cnx=connect();
            st=c.createStatement();
            rst=st.executeQuery("Select COUNT(nDoc) as count from empreinter");
            while(rst.next()){
                int n=rst.getInt("count");
                //System.out.println(n);
                for (int i=0; i<n; i++){
                    st1=c.createStatement();
                    rst1=st1.executeQuery("Select dateEmp, typeDoc from empreinter where nAdhesion='"+i+"'");
                    while (rst1.next()){
                        //Date d'empreinte
                        Calendar calendar1 = new GregorianCalendar();
                        calendar1.setTime(rst1.getDate("dateEmp"));
                        calendar1.get(Calendar.YEAR);
                        calendar1.get(Calendar.MONTH);
                        calendar1.get(Calendar.DAY_OF_MONTH);
                        java.util.Date date1 = calendar1.getTime();
                
                        //Date actuelle
                        Calendar calendar2 = new GregorianCalendar();
                        calendar2.get(Calendar.getInstance().YEAR);
                        calendar2.get(Calendar.getInstance().MONTH);
                        calendar2.get(Calendar.getInstance().DAY_OF_MONTH);
                        java.util.Date date2 = calendar2.getTime();
                
                        // Différence
                        long diff = Math.abs(date2.getTime() - date1.getTime());
                        long numberOfDay = (long)diff/CONST_DURATION_OF_DAY;
                        //System.out.println(numberOfDay);
                        String type= rst1.getString("typeDoc");
                        switch(type){
                            case "livre":
                                if(numberOfDay>=21){
                                    model.setColumnCount(4);
                                    st2=c.createStatement();
                                    rst2=st2.executeQuery("Select * from empreinter where nAdhesion='"+i+"' and dateEmp='"+rst1.getDate("dateEmp")+"'");
                                    while (rst2.next()){
                                 //  System.out.println(rst1.getDate("dateEmp"));
                                        model.addRow(new Object[WIDTH]);
                                        model.setValueAt(rst2.getInt("nDoc"), j, 0);
                                        model.setValueAt(rst2.getString("nAdhesion"), j, 1);
                                        model.setValueAt(rst2.getString("typeDoc"), j, 2);
                                        model.setValueAt(rst2.getString("dateEmp"), j, 3);
                                        j++;
                                        empr.setEnabled(false); 
                                    }
                                }
                                break;
                                
                            case "periodique":  
                                if(numberOfDay>=7){
                                    model.setColumnCount(4);
                                    st3=c.createStatement();
                                    rst3=st3.executeQuery("Select * from empreinter where nAdhesion='"+i+"' and dateEmp='"+rst1.getDate("dateEmp")+"'");
                                    while (rst3.next()){
                                        //System.out.println(rst1.getDate("dateEmp"));
                                        model.addRow(new Object[WIDTH]);
                                        model.setValueAt(rst3.getInt("nDoc"), j, 0);
                                        model.setValueAt(rst3.getString("nAdhesion"), j, 1);
                                        model.setValueAt(rst3.getString("typeDoc"), j, 2);
                                        model.setValueAt(rst3.getString("dateEmp"), j, 3);
                                        j++;
                                        empr.setEnabled(false); 
                                    }
                                }
                                break;
                        }
                    }
                }
            }
        }catch (SQLException ex) {
            Logger.getLogger(Rechercher.class.getName()).log(Level.SEVERE, null, ex);
        }         
    }//GEN-LAST:event_VérifActionPerformed

    private void accueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accueilActionPerformed
        this.setVisible(false);
        AccueilN a= new AccueilN();
        a.setVisible(true);
    }//GEN-LAST:event_accueilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(deadline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(deadline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(deadline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(deadline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new deadline().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Vérif;
    private javax.swing.JButton accueil;
    private javax.swing.JTable empr;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
