/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.Year;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author VIP5-SEPT-17
 */
public class Vérifier extends javax.swing.JFrame {
    
    
    String url = "jdbc:sqlserver://localhost:1433;databaseName=bibliodec;user=enidde;password=azert";
    Connection c;
    Statement st;
    PreparedStatement ps;
    ResultSet re;

    public static Connection getConnection() throws SQLException {
        Connection con = null;
        String url = "jdbc:sqlserver://localhost:1433;databaseName=bibliodec;user=enidde;password=azert";
        try {
            con = DriverManager.getConnection(url);
            JOptionPane.showMessageDialog(null, "connsecter avec succes");
            return con;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
            return null;
        }
    }
    
    
    Statement st0,st1,st2;
    ResultSet rst,rst1,rst2;
    int y;
    String t;
    public Vérifier(ArrayList L,String t) {
        initComponents();
        for(int i=0; i<L.size();i++)
        id.addItem(L.get(i).toString());
        this.t=t;
    }
    private Vérifier() {
        initComponents();
        
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numA = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        vérifier = new javax.swing.JButton();
        id = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Num adhésion");

        vérifier.setText("Vérifier");
        vérifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vérifierActionPerformed(evt);
            }
        });

        id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idMouseClicked(evt);
            }
        });
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel2.setText("Num Doc");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(vérifier))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(numA)
                            .addComponent(id, 0, 116, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel2)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(numA, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(vérifier)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vérifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vérifierActionPerformed
        long CONST_DURATION_OF_DAY = 1000 * 60 * 60 * 24;
        if("".equals(numA.getText())){
            JOptionPane.showMessageDialog(null, "Veuillez donner votre numéro d'adhésion");
        }else{
        
        try{
            c = getConnection();
            //Connection cnx=connect();
            st = c.createStatement();
            //st=cnx.createStatement();
            rst=st.executeQuery("Select COUNT(*) as count from adherent where nAdhesion='"+Integer.parseInt(numA.getText())+"'");
            
            while(rst.next()){
                
                if(rst.getInt("count")==0){
                    JOptionPane.showMessageDialog(null,"Adhérent n'existe pas");
                    numA.setText("");
                    
                }else{
                    st = c.createStatement();
                    //st1=cnx.createStatement();
                    rst1=st.executeQuery("Select dateInsc from adherent where nAdhesion='"+Integer.parseInt(numA.getText())+"'");
                    while (rst1.next()){
                        //Date d'inscription
                        Calendar calendar1 = new GregorianCalendar();
                        calendar1.setTime(rst1.getDate("dateInsc"));
                        calendar1.get(Calendar.YEAR);
                        calendar1.get(Calendar.MONTH);
                        calendar1.get(Calendar.DAY_OF_MONTH);
                        java.util.Date date1 = calendar1.getTime();
                
                        //Date actuelle
                        Calendar calendar2 = new GregorianCalendar();
                        calendar2.get(Calendar.getInstance().YEAR);
                        calendar2.get(Calendar.getInstance().MONTH);
                        calendar2.get(Calendar.getInstance().DAY_OF_MONTH);
                        java.util.Date date2 = calendar2.getTime();
                        
                        // Différence
                        long diff = Math.abs(date2.getTime() - date1.getTime());
                        long numberOfDay = (long)diff/CONST_DURATION_OF_DAY;
		
                        if(numberOfDay>=365){
                            JOptionPane.showMessageDialog(null, "Vous devez renouvler votre adhésion",null,JOptionPane.WARNING_MESSAGE);
                        }
                        else{
                            st = c.createStatement();
                            //st2=cnx.createStatement();
                            switch(t){
                                case "Livre":
                                    rst2=st.executeQuery("select COUNT(typeDoc) as count from empreinter where nAdhesion='"+Integer.parseInt(numA.getText())+"' and typeDoc='Livre'");
                                    while(rst2.next()){
                                        if(rst2.getInt("count")>=3){
                                            JOptionPane.showMessageDialog(null, "Vous avez dépassé le nombre max de prêts");
                                        }else{
                                            JOptionPane.showMessageDialog(null, "Adhérent vérifié");
                                            this.dispose();
                                            int x= Integer.parseInt(numA.getText());
                                            int y=Integer.parseInt(id.getSelectedItem()+"");
                                            Empreinter e= new Empreinter(x,y,t);
                                            e.setVisible(true);
                                        }
                                    }
                                break;
                            
                                case "Périodique":
                                    rst2=st.executeQuery("select COUNT(typeDoc) as count from empreinter where nAdhesion='"+Integer.parseInt(numA.getText())+"' and typeDoc='Périodique'");
                                    while(rst2.next()){
                                        if(rst2.getInt("count")>=2){
                                            JOptionPane.showMessageDialog(null, "Vous avez dépassé le nombre max de prêts");
                                        }else{
                                            JOptionPane.showMessageDialog(null, "Adhérent vérifié");
                                            this.dispose();
                                            int x= Integer.parseInt(numA.getText());
                                            int y=Integer.parseInt(id.getSelectedItem()+"");
                                            Empreinter e= new Empreinter(x,y,t);
                                            e.setVisible(true);
                                        }
                                    }
                                break;
                            }
                        }
                    }   
                } 
            }
        }catch (SQLException ex) {
            Logger.getLogger(Rechercher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_vérifierActionPerformed

    private void idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_idMouseClicked

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vérifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vérifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vérifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vérifier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vérifier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField numA;
    private javax.swing.JButton vérifier;
    // End of variables declaration//GEN-END:variables

    

    
}
